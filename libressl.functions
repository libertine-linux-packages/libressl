# This file is part of libertine linux's package libressl. It is subject to the license terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/libressl/master/COPYRIGHT. No part of libertine linux's package libressl, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2016 The developers of libertine linux's package libressl. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/libressl/master/COPYRIGHT.


variant=portable

depends build_ccache
build_needs ccache

depends build_gnumake
build_needs make

depends build_perl
build_needs perl

depends build_cmake
build_needs cmake

depends build_busybox
# For _libertine_compile_libressl_internal
build_needs ln mkdir rm cp
# For build proper
build_needs awk basename chmod cmp cp cut dirname expr find grep install ls mkdir mv rm sed sleep sort

depends build_netbsd_src_patch
build_needs patch

case "$package" in
	
	build_libressl)
		
		depends build_musl_cross_make_build
		build_needs "$libertine_build"-cc "$libertine_build"-gcc "$libertine_build"-ar "$libertine_build"-ld "$libertine_build"-ranlib "$libertine_build"-strip
				
		libertine_compile_build_libressl()
		{
			_libertine_compile_libressl_internal false "$(libertine_public_outputBuildSysrootPath)"
		}
	;;
	
	libressl)
	
		depends build_musl_cross_make_host
		build_needs "$libertine_host"-cc "$libertine_host"-gcc "$libertine_host"-ar "$libertine_host"-ld "$libertine_host"-ranlib "$libertine_host"-strip
		
		libertine_compile_libressl()
		{
			_libertine_compile_libressl_internal true "$(libertine_public_outputHostSysrootPath)"
			
			libertine_public_installAndStripBinariesIn bin openssl
			
			mkdir -m 0755 -p "$(libertine_public_outputInitramfsPath)"/etc
			libertine_public_copy "$(libertine_public_outputHostSysrootPath)"/etc/ "$(libertine_public_outputInitramfsPath)"/etc/
		}
	;;
	
	libressl_nc)
		
		depends libressl
	
		depends build_musl_cross_make_host
		build_needs "$libertine_host"-strip
		
		libertine_compile_libressl_nc()
		{
			local destinationFolderPath="$(libertine_public_outputInitramfsPath)"/usr/bin
			mkdir -m 0755 -p "$destinationFolderPath"
			
			cp "$(libertine_public_outputHostSysrootPath libressl)"/usr/bin/nc "$destinationFolderPath"
			${libertine_host}-strip "$destinationFolderPath"/nc
		}
		
	;;
	
esac

build_needs sed rm
_libertine_compile_libressl_internal()
{
	local strip="$1"
	local destinationFolderPath="$2"
	
	pushd "$(libertine_public_sourcePath)"
		
		# We fake pod2man
		libertine_public_addOrReplaceBinaryInPathWithSwallow pod2man
		
		# We make sure /opt/freeware/bin/patch isn't used - it's unlikely to be present, but we want a clean environment
		sed -i -e 's;/opt/freeware/bin/patch;patch;g' update.sh
				
		# We need to 'fake' git to bypass the logic in update.sh (they use a git clone, not a git submodule)
		ln -s ../openbsd openbsd
		libertine_public_addOrReplaceBinaryInPathWithSwallow git
		
		{
			printf '%s\n' "Running update.sh"
			sh update.sh
			printf '\n\n'
		} 1>&2
		
		local etcFolderPath
		if $strip; then
			etcFolderPath='/etc/ssl'
		else
			etcFolderPath="$destinationFolderPath"/etc/ssl
		fi
		
		# Remove -fPIC nastiness and shared code
		sed -i \
			-e 's/set(CMAKE_POSITION_INDEPENDENT_CODE true)/set(CMAKE_POSITION_INDEPENDENT_CODE false)/g' \
			-e 's/set(BUILD_SHARED true)/set(BUILD_SHARED false)/g' \
			CMakeLists.txt
		
		libertine_public_cmake -DENABLE_ASM:BOOL=ON -DENABLE_NC:BOOL=ON -DOPENSSLDIR="$etcFolderPath"
		
		pushd .libertine-cmake-build
			libertine_public_make VERBOSE=1
		
			if $strip; then
				libertine_public_make DESTDIR="$destinationFolderPath" install
			else
				libertine_public_make install
			fi
		popd
		
	popd
}
